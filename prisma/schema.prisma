// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Dado {
  id        Int     @id @default(autoincrement())
  nome      String  @db.VarChar(100)
  descricao String  @db.VarChar(255)
  usuarioId Int
  usuario   Usuario @relation(fields: [usuarioId], references: [id])

  @@map("dados")
}

model DadosArquivado {
  id        Int     @id
  nome      String  @db.VarChar(100)
  email     String  @db.VarChar(100)
  descricao String  @db.VarChar(255)
  usuarioId Int
  usuario   Usuario @relation(fields: [usuarioId], references: [id])

  @@map("dadosArquivados")
}

model Usuario {
  id                  Int              @id @default(autoincrement())
  nome                String           @db.VarChar(100)
  email               String           @db.VarChar(100)
  senha               String           @db.VarChar(255)
  ultimoAcesso        DateTime?
  createdAt           DateTime         @default(now())
  updatedAt           DateTime         @updatedAt
  tentativasInvalidas Int              @default(0)
  bloqueadoAte        DateTime?
  dataUltimoBloqueio  DateTime?
  dados               Dado[]
  dadosArquivados     DadosArquivado[]
  logs                Log[]

  @@map("usuarios")
}

model Log {
  id          Int      @id @default(autoincrement())
  descricao   String   @db.VarChar(255)
  complemento String   @db.VarChar(255)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  usuario     Usuario  @relation(fields: [usuarioId], references: [id])
  usuarioId   Int

  @@map("logs")
}
